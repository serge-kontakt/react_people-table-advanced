{"version":3,"sources":["components/Navbar.tsx","App.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","utils/searchHelper.ts","components/SearchLink.tsx","types/Filter.ts","components/PeopleTable/PeopleTable.tsx","components/PeopleFilters.tsx","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinksClass","isActive","classNames","Navbar","search","useLocation","className","role","to","pathname","App","HomePage","NotFoundPage","Loader","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","sex","person","useSearchParams","searchParams","slug","toString","name","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","Filter","SORT_TITLES","Name","Sex","Born","Died","PeopleTable","people","useParams","useState","visiblePeople","setVisiblePeople","selectedPerson","query","get","toLowerCase","centuries","getAll","sort","order","useEffect","filteredPeople","filter","obj","queryLow","includes","motherName","fatherName","length","personCentury","Math","ceil","born","a","b","localeCompare","reverse","peopleWithParents","map","mother","find","woman","father","man","title","toUpperCase","slice","sortTitle","died","CENTURIES_LINKS","PeopleFilters","setSearchParams","setCentury","century","cent","type","placeholder","onChange","event","setSearchWith","target","PeoplePage","setPeople","isError","setIsError","isNoPeople","setIsNoPeople","isLoading","setIsLoading","getPeople","peopleAll","catch","finally","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c675fde5.chunk.js","sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport '../App.scss';\n\nconst getLinksClass = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item ', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n\nexport const Navbar = () => {\n  const { search } = useLocation();\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinksClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinksClass}\n            to={{\n              pathname: '/people',\n              search,\n            }}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { NavLink, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n\n  const getLinkClass = (sex: string) => {\n    return classNames('', {\n      'has-text-danger': sex === 'f',\n    });\n  };\n\n  return (\n    <NavLink\n      to={{\n        pathname: `../${person?.slug}`,\n        search: searchParams.toString(),\n      }}\n      className={getLinkClass(person.sex)}\n    >\n      {person?.name}\n    </NavLink>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","export enum Filter {\n  Born = 'born',\n  Died = 'died',\n  Name = 'name',\n  Sex = 'sex',\n}\n","import { useParams, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\nimport '../../App.scss';\nimport { PersonLink } from '../PersonLink';\nimport { SearchLink } from '../SearchLink';\nimport { Filter } from '../../types/Filter';\n\nconst SORT_TITLES: Filter[] = (\n  [Filter.Name, Filter.Sex, Filter.Born, Filter.Died]\n);\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [searchParams] = useSearchParams();\n  const { slug } = useParams();\n  const [visiblePeople, setVisiblePeople] = useState(people);\n\n  const selectedPerson = slug;\n\n  const query = searchParams.get('query')?.toLowerCase();\n  const sex = searchParams.get('sex');\n  const centuries = searchParams.getAll('centuries');\n  const sort = searchParams.get('sort');\n  const order = searchParams.get('order');\n\n  useEffect(() => {\n    let filteredPeople = sex\n      ? people.filter(person => person.sex === sex)\n      : [...people];\n\n    if (query) {\n      filteredPeople = filteredPeople.filter((obj) => {\n        const queryLow = query.toLowerCase();\n\n        return (\n          (obj.name && obj.name.toLowerCase().includes(queryLow))\n          || (obj.motherName && obj.motherName.toLowerCase().includes(queryLow))\n          || (obj.fatherName && obj.fatherName.toLowerCase().includes(queryLow))\n        );\n      });\n    }\n\n    if (centuries.length > 0) {\n      filteredPeople = filteredPeople.filter((person) => {\n        const personCentury = Math.ceil(person.born / 100);\n\n        if (centuries.includes(personCentury.toString())) {\n          return person;\n        }\n\n        return null;\n      });\n    }\n\n    switch (sort) {\n      case Filter.Born:\n      case Filter.Died:\n        filteredPeople = filteredPeople.sort((a, b) => a[sort] - b[sort]);\n        break;\n\n      case Filter.Name:\n      case Filter.Sex:\n        filteredPeople = (\n          filteredPeople.sort((a, b) => a[sort].localeCompare(b[sort]))\n        );\n        break;\n\n      default:\n        break;\n    }\n\n    if (order) {\n      filteredPeople.reverse();\n    }\n\n    setVisiblePeople(filteredPeople);\n  }, [searchParams]);\n\n  const setSortOrder = (sortTitle: string) => {\n    if (sort !== sortTitle) {\n      return { sort: sortTitle, order: null };\n    }\n\n    if (!order) {\n      return { sort, order: 'desc' };\n    }\n\n    return { sort: null, order: null };\n  };\n\n  const peopleWithParents = visiblePeople.map(person => {\n    if (person.motherName && person.fatherName) {\n      const mother = (\n        visiblePeople.find(woman => woman.name === person.motherName)\n      );\n      const father = visiblePeople.find(man => man.name === person.fatherName);\n\n      return {\n        ...person,\n        mother,\n        father,\n      };\n    }\n\n    if (person.motherName) {\n      const mother = (\n        visiblePeople.find(woman => woman.name === person.motherName)\n      );\n\n      return {\n        ...person,\n        mother,\n      };\n    }\n\n    if (person.fatherName) {\n      const father = visiblePeople.find(man => man.name === person.fatherName);\n\n      return {\n        ...person,\n        father,\n      };\n    }\n\n    return person;\n  });\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {SORT_TITLES.map(title => (\n            <th key={title}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {title[0].toUpperCase() + title.slice(1)}\n                <SearchLink\n                  params={setSortOrder(title)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames('fas', {\n                        'fa-sort': sort !== title,\n                        'fa-sort-up': sort === title && !order,\n                        'fa-sort-down': sort === title && order,\n                      })}\n                    />\n                  </span>\n                </SearchLink>\n              </span>\n            </th>\n          ))}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleWithParents.map((person: Person) => (\n          <tr\n            data-cy=\"person\"\n            key={person.name}\n            className={classNames({\n              'has-background-warning': selectedPerson === person.slug,\n            })}\n          >\n            <td>\n              <PersonLink\n                person={person}\n              />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {!person.motherName && '-'}\n              {person.motherName\n                && (\n                  person.mother\n                    ? (\n                      <PersonLink\n                        person={person.mother}\n                      />\n                    )\n                    : person.motherName\n                )}\n            </td>\n            <td>\n              {!person.fatherName && '-'}\n              {person.fatherName\n                && (\n                  person.father\n                    ? (\n                      <PersonLink\n                        person={person.father}\n                      />\n                    )\n                    : person.fatherName\n                )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n\n    </table>\n\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\nconst CENTURIES_LINKS = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  const setCentury = (century: string) => {\n    return centuries.includes(century)\n      ? centuries.filter(cent => century !== cent)\n      : [...centuries, century];\n  };\n\n  function setSearchWith(params: SearchParams) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSearchWith({ query: event.target.value || null });\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={classNames({ 'is-active': sex === null })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={classNames({ 'is-active': sex === 'm' })}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={classNames({ 'is-active': sex === 'f' })}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES_LINKS.map((century: string) => (\n              <SearchLink\n                data-cy=\"century\"\n                key={century}\n                className={classNames('button mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n                params={{ centuries: setCentury(century) }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={classNames('button is-success', {\n                'is-outlined': centuries.length > 0,\n              })}\n              params={{ centuries: [] }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            centuries: [],\n            query: null,\n            sex: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { PeopleFilters } from '../components/PeopleFilters';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isNoPeople, setIsNoPeople] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleAll: Person[]) => {\n        setPeople(peopleAll);\n\n        if (peopleAll.length === 0) {\n          setIsNoPeople(true);\n        }\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {people.length > 0 && <PeopleFilters />}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {isError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {isNoPeople && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!isLoading && !isNoPeople && !isError && people.length > 0\n                && (\n                  <PeopleTable\n                    people={people}\n                  />\n                )}\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}